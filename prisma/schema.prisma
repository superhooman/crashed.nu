// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id            String   @id @default(cuid())
  abbr          String
  academicLevel String
  antiReq       String
  coReq         String
  preReq        String
  department    String
  school        String
  description   String
  title         String
  credits       String
  lastTaught    String

  schedules     Schedule[]
}

model Schedule {
  id            String   @id @default(cuid())
  capacity      String
  days          String
  enr           Int
  faculty       String
  finalExam     Boolean
  room          String
  st            String
  times         String
  courseId      String

  course        Course   @relation(fields: [courseId], references: [id])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  xp            Int @default(0)
  accounts      Account[]
  sessions      Session[]

  schedule      UserSchedule?
}

model UserSchedule {
  id            String    @id @default(cuid())
  userId        String    @unique
  data          Json
  preferences   Json
  date          DateTime  @default(now())
  shared        Boolean   @default(true)
  short         String?   @unique

  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
